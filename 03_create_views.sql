USE DIGIFAB;

-- =========================================================
-- 03_create_views.sql
-- Base de views para painéis e consultas analíticas
-- =========================================================

-- ---------------------------------------------------------
-- 1) Base de OP (joins úteis para reaproveitar em gráficos)
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_OP_BASICA AS
SELECT
  OP.ID_ORDEM_PRODUCAO,
  OP.CODIGO                               AS CODIGO_OP,
  OP.DT_HORA_INICIO,
  DATE(OP.DT_HORA_INICIO)                 AS DIA,
  OP.QUANTIDADE_PRODUZIR,
  LN.ID_LINHA_PRODUCAO,
  LN.CODIGO                               AS CODIGO_LINHA,
  LN.NOME                                 AS NOME_LINHA,
  P.ID_PRODUTO,
  P.CODIGO                                AS CODIGO_PRODUTO,
  P.NOME                                  AS NOME_PRODUTO,
  LP.ID_LOTE_PRODUTO,
  LP.CODIGO                               AS LOTE_PRODUTO
FROM ORDEM_PRODUCAO OP
JOIN LINHA_PRODUCAO LN  ON LN.ID_LINHA_PRODUCAO = OP.ID_LINHA_PRODUCAO
JOIN LOTE_PRODUTO   LP  ON LP.ID_LOTE_PRODUTO   = OP.ID_LOTE_PRODUTO
JOIN PRODUTO        P   ON P.ID_PRODUTO         = LP.ID_PRODUTO;

-- ---------------------------------------------------------
-- 2) Produção por dia e por linha
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_PRODUCAO_POR_DIA_LINHA AS
SELECT
  DIA,
  CODIGO_LINHA,
  NOME_LINHA,
  SUM(QUANTIDADE_PRODUZIR) AS QTD_PLANEJADA
FROM VW_OP_BASICA
GROUP BY DIA, CODIGO_LINHA, NOME_LINHA;

-- ---------------------------------------------------------
-- 3) Produção agregada por produto
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_PRODUCAO_POR_PRODUTO AS
SELECT
  CODIGO_PRODUTO,
  NOME_PRODUTO,
  SUM(QUANTIDADE_PRODUZIR) AS TOTAL_PLANEJADO
FROM VW_OP_BASICA
GROUP BY CODIGO_PRODUTO, NOME_PRODUTO;

-- ---------------------------------------------------------
-- 4) Consumo de Matéria-Prima (agregado)
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_CONSUMO_MP AS
SELECT
  MP.ID_MATERIA_PRIMA,
  MP.CODIGO AS CODIGO_MP,
  MP.NOME   AS NOME_MP,
  ROUND(SUM(CLM.QUANTIDADE_CONSUMIDA), 3) AS CONSUMO_KG
FROM CONSUMO_LOTE_MP CLM
JOIN LOTE_MP LM       ON LM.ID_LOTE_MP = CLM.ID_LOTE_MP
JOIN MATERIA_PRIMA MP ON MP.ID_MATERIA_PRIMA = LM.ID_MATERIA_PRIMA
GROUP BY MP.ID_MATERIA_PRIMA, MP.CODIGO, MP.NOME;

-- ---------------------------------------------------------
-- 5) Consumo de Matéria-Prima por dia
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_CONSUMO_MP_POR_DIA AS
SELECT
  DATE(CLM.DATA_CONSUMO) AS DIA,
  MP.CODIGO AS CODIGO_MP,
  MP.NOME   AS NOME_MP,
  ROUND(SUM(CLM.QUANTIDADE_CONSUMIDA), 3) AS CONSUMO_KG
FROM CONSUMO_LOTE_MP CLM
JOIN LOTE_MP LM       ON LM.ID_LOTE_MP = CLM.ID_LOTE_MP
JOIN MATERIA_PRIMA MP ON MP.ID_MATERIA_PRIMA = LM.ID_MATERIA_PRIMA
GROUP BY DIA, MP.CODIGO, MP.NOME;

-- ---------------------------------------------------------
-- 6) Planejado × Consumido por OP e MP (com desvio)
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_PLANEJADO_CONSUMIDO_OP_MP AS
SELECT
  OP.ID_ORDEM_PRODUCAO,
  OP.CODIGO                    AS CODIGO_OP,
  MP.ID_MATERIA_PRIMA,
  MP.CODIGO                    AS CODIGO_MP,
  MP.NOME                      AS NOME_MP,
  ROUND(SUM(MPO.QUANTIDADE_PREVISTA), 3)                           AS PLANEJADO_KG,
  ROUND(COALESCE(SUM(CONS.CONSUMO_TOTAL), 0), 3)                    AS CONSUMIDO_KG,
  ROUND(COALESCE(SUM(CONS.CONSUMO_TOTAL), 0) - SUM(MPO.QUANTIDADE_PREVISTA), 3) AS DESVIO_KG
FROM MATERIA_PRIMA_ORDEM_PRODUCAO MPO
JOIN ORDEM_PRODUCAO OP ON OP.ID_ORDEM_PRODUCAO = MPO.ID_ORDEM_PRODUCAO
JOIN MATERIA_PRIMA MP  ON MP.ID_MATERIA_PRIMA  = MPO.ID_MATERIA_PRIMA
LEFT JOIN (
  SELECT
    CLM.ID_ORDEM_PRODUCAO,
    LM.ID_MATERIA_PRIMA,
    SUM(CLM.QUANTIDADE_CONSUMIDA) AS CONSUMO_TOTAL
  FROM CONSUMO_LOTE_MP CLM
  JOIN LOTE_MP LM ON LM.ID_LOTE_MP = CLM.ID_LOTE_MP
  GROUP BY CLM.ID_ORDEM_PRODUCAO, LM.ID_MATERIA_PRIMA
) CONS ON CONS.ID_ORDEM_PRODUCAO = MPO.ID_ORDEM_PRODUCAO
      AND CONS.ID_MATERIA_PRIMA  = MPO.ID_MATERIA_PRIMA
GROUP BY
  OP.ID_ORDEM_PRODUCAO, OP.CODIGO,
  MP.ID_MATERIA_PRIMA, MP.CODIGO, MP.NOME;

-- ---------------------------------------------------------
-- 7) Planejado × Consumido agregado por MP
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_PLANEJADO_CONSUMIDO_MP AS
SELECT
  MP.ID_MATERIA_PRIMA,
  MP.CODIGO AS CODIGO_MP,
  MP.NOME   AS NOME_MP,
  ROUND(SUM(MPO.QUANTIDADE_PREVISTA), 3)                 AS PLANEJADO_KG,
  ROUND(COALESCE(SUM(CONS.CONSUMO_TOTAL), 0), 3)         AS CONSUMIDO_KG,
  ROUND(COALESCE(SUM(CONS.CONSUMO_TOTAL), 0) - SUM(MPO.QUANTIDADE_PREVISTA), 3) AS DESVIO_KG
FROM MATERIA_PRIMA_ORDEM_PRODUCAO MPO
JOIN ORDEM_PRODUCAO OP ON OP.ID_ORDEM_PRODUCAO = MPO.ID_ORDEM_PRODUCAO
JOIN MATERIA_PRIMA MP  ON MP.ID_MATERIA_PRIMA  = MPO.ID_MATERIA_PRIMA
LEFT JOIN (
  SELECT
    CLM.ID_ORDEM_PRODUCAO,
    LM.ID_MATERIA_PRIMA,
    SUM(CLM.QUANTIDADE_CONSUMIDA) AS CONSUMO_TOTAL
  FROM CONSUMO_LOTE_MP CLM
  JOIN LOTE_MP LM ON LM.ID_LOTE_MP = CLM.ID_LOTE_MP
  GROUP BY CLM.ID_ORDEM_PRODUCAO, LM.ID_MATERIA_PRIMA
) CONS ON CONS.ID_ORDEM_PRODUCAO = MPO.ID_ORDEM_PRODUCAO
      AND CONS.ID_MATERIA_PRIMA  = MPO.ID_MATERIA_PRIMA
GROUP BY MP.ID_MATERIA_PRIMA, MP.CODIGO, MP.NOME;

-- ---------------------------------------------------------
-- 8) Saldo por lote de MP (entrada, consumo, saldo)
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_SALDO_LOTE_MP AS
SELECT
  LM.ID_LOTE_MP,
  LM.CODIGO         AS LOTE_MP,
  MP.CODIGO         AS CODIGO_MP,
  MP.NOME           AS NOME_MP,
  ROUND(LM.QUANTIDADE, 3)                         AS QTD_ENTRADA_KG,
  ROUND(COALESCE(CONS.CONSUMO, 0), 3)             AS QTD_CONSUMO_KG,
  ROUND(LM.QUANTIDADE - COALESCE(CONS.CONSUMO, 0), 3) AS QTD_SALDO_KG
FROM LOTE_MP LM
JOIN MATERIA_PRIMA MP ON MP.ID_MATERIA_PRIMA = LM.ID_MATERIA_PRIMA
LEFT JOIN (
  SELECT ID_LOTE_MP, SUM(QUANTIDADE_CONSUMIDA) AS CONSUMO
  FROM CONSUMO_LOTE_MP
  GROUP BY ID_LOTE_MP
) CONS ON CONS.ID_LOTE_MP = LM.ID_LOTE_MP;

-- ---------------------------------------------------------
-- 9) Saldo agregado por MP
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_SALDO_MP AS
SELECT
  MP.ID_MATERIA_PRIMA,
  MP.CODIGO AS CODIGO_MP,
  MP.NOME   AS NOME_MP,
  ROUND(SUM(LM.QUANTIDADE), 3)                        AS ENTRADA_TOTAL_KG,
  ROUND(COALESCE(SUM(CONS.CONSUMO), 0), 3)            AS CONSUMO_TOTAL_KG,
  ROUND(SUM(LM.QUANTIDADE) - COALESCE(SUM(CONS.CONSUMO), 0), 3) AS SALDO_TOTAL_KG
FROM MATERIA_PRIMA MP
LEFT JOIN LOTE_MP LM ON LM.ID_MATERIA_PRIMA = MP.ID_MATERIA_PRIMA
LEFT JOIN (
  SELECT ID_LOTE_MP, SUM(QUANTIDADE_CONSUMIDA) AS CONSUMO
  FROM CONSUMO_LOTE_MP
  GROUP BY ID_LOTE_MP
) CONS ON CONS.ID_LOTE_MP = LM.ID_LOTE_MP
GROUP BY MP.ID_MATERIA_PRIMA, MP.CODIGO, MP.NOME;

-- ---------------------------------------------------------
-- 10) Rastreabilidade: OP × Lotes de MP consumidos × Lote de Produto
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_RASTREABILIDADE_CONSUMO AS
SELECT
  OP.CODIGO   AS CODIGO_OP,
  P.CODIGO    AS CODIGO_PRODUTO,
  P.NOME      AS NOME_PRODUTO,
  LP.CODIGO   AS LOTE_PRODUTO,
  MP.CODIGO   AS CODIGO_MP,
  MP.NOME     AS NOME_MP,
  LM.CODIGO   AS LOTE_MP,
  ROUND(CLM.QUANTIDADE_CONSUMIDA, 3) AS QUANTIDADE_KG,
  CLM.DATA_CONSUMO
FROM CONSUMO_LOTE_MP CLM
JOIN ORDEM_PRODUCAO OP ON OP.ID_ORDEM_PRODUCAO = CLM.ID_ORDEM_PRODUCAO
JOIN LOTE_MP LM        ON LM.ID_LOTE_MP = CLM.ID_LOTE_MP
JOIN MATERIA_PRIMA MP  ON MP.ID_MATERIA_PRIMA = LM.ID_MATERIA_PRIMA
JOIN LOTE_PRODUTO LP   ON LP.ID_LOTE_PRODUTO = OP.ID_LOTE_PRODUTO
JOIN PRODUTO P         ON P.ID_PRODUTO = LP.ID_PRODUTO;

-- ---------------------------------------------------------
-- 11) Apoio à utilização: OPs agregadas por linha/dia + horas ativas
-- ---------------------------------------------------------
CREATE OR REPLACE VIEW VW_OP_POR_LINHA_DIA AS
SELECT
  OP.ID_LINHA_PRODUCAO,
  DATE(OP.DT_HORA_INICIO) AS DIA,
  SUM(OP.QUANTIDADE_PRODUZIR) AS QTD_PROGRAMADA,
  COUNT(DISTINCT DATE_FORMAT(OP.DT_HORA_INICIO, '%Y-%m-%d %H')) AS HORAS_ATIVAS
FROM ORDEM_PRODUCAO OP
GROUP BY OP.ID_LINHA_PRODUCAO, DIA;

-- Utilização por linha/dia (usa CAPACIDADE_HORA do cadastro da linha)
CREATE OR REPLACE VIEW VW_UTILIZACAO_LINHA_DIA AS
SELECT
  LN.CODIGO AS LINHA,
  V.DIA,
  V.QTD_PROGRAMADA                          AS PROGRAMADO_DIA,
  (LN.CAPACIDADE_HORA * V.HORAS_ATIVAS)     AS CAPACIDADE_ESTIMADA,
  ROUND(V.QTD_PROGRAMADA / NULLIF(LN.CAPACIDADE_HORA * V.HORAS_ATIVAS, 0), 2) AS UTILIZACAO_REL
FROM LINHA_PRODUCAO LN
JOIN VW_OP_POR_LINHA_DIA V
  ON V.ID_LINHA_PRODUCAO = LN.ID_LINHA_PRODUCAO;

-- =========================================================
-- Fim do 03_create_views.sql
-- =========================================================